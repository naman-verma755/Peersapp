[{"C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\index.js":"1","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\App.js":"2","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\LivePeers\\LivePeers.js":"3","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\Input\\Input.js":"4","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\LiveChat\\LiveChat.js":"5","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\LiveChat\\Message\\Message.js":"6","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\CodeArea\\CodeArea.js":"7","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\codeEditor\\codeEditor.js":"8","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\CodeEditor\\CodeEditor.js":"9","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\UsersGuide\\UsersGuide.js":"10","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\Login\\login.js":"11","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\Login\\Login.js":"12","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\CreateJoin\\CreateJoin.js":"13","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\Signup\\Signup.js":"14","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\NavBar\\NavBar.js":"15","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\CreateJoin\\Create.js":"16","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\CreateJoin\\Join.js":"17","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\Compile\\Compiled.js":"18","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\UserVerification\\UserVerification.js":"19","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\RoomVerification\\RoomVerification.js":"20","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\FetchRoomUsers\\FetchRoomUsers.js":"21","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\FetchRoomMessages\\FetchRoomMessages.js":"22","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\Home\\Home.js":"23"},{"size":150,"mtime":1610613359605,"results":"24","hashOfConfig":"25"},{"size":1073,"mtime":1631640247796,"results":"26","hashOfConfig":"25"},{"size":464,"mtime":1631683351105,"results":"27","hashOfConfig":"25"},{"size":666,"mtime":1631640249515,"results":"28","hashOfConfig":"25"},{"size":456,"mtime":1631640249515,"results":"29","hashOfConfig":"25"},{"size":960,"mtime":1631640250001,"results":"30","hashOfConfig":"25"},{"size":10974,"mtime":1631640249172,"results":"31","hashOfConfig":"25"},{"size":13896,"mtime":1619627486837,"results":"32","hashOfConfig":"25"},{"size":6661,"mtime":1631640249204,"results":"33","hashOfConfig":"25"},{"size":2064,"mtime":1631640250345,"results":"34","hashOfConfig":"25"},{"size":1145,"mtime":1621252900359,"results":"35","hashOfConfig":"25"},{"size":4644,"mtime":1631640250009,"results":"36","hashOfConfig":"25"},{"size":1408,"mtime":1631640249212,"results":"37","hashOfConfig":"25"},{"size":5348,"mtime":1631640250275,"results":"38","hashOfConfig":"25"},{"size":1848,"mtime":1631640250235,"results":"39","hashOfConfig":"25"},{"size":2215,"mtime":1631640249204,"results":"40","hashOfConfig":"25"},{"size":2207,"mtime":1631640249228,"results":"41","hashOfConfig":"25"},{"size":4391,"mtime":1631640249204,"results":"42","hashOfConfig":"25"},{"size":1107,"mtime":1631640250283,"results":"43","hashOfConfig":"25"},{"size":1146,"mtime":1631640250235,"results":"44","hashOfConfig":"25"},{"size":1063,"mtime":1631640249475,"results":"45","hashOfConfig":"25"},{"size":1135,"mtime":1631640249243,"results":"46","hashOfConfig":"25"},{"size":2157,"mtime":1631640249507,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"15nhjbe",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":2,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":11,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},"C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\index.js",[],["101","102"],"C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\App.js",[],"C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\LivePeers\\LivePeers.js",[],"C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\Input\\Input.js",[],"C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\LiveChat\\LiveChat.js",[],"C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\LiveChat\\Message\\Message.js",[],"C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\CodeArea\\CodeArea.js",["103","104","105","106","107","108"],"\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport io from 'socket.io-client';\r\nimport '../CodeEditor/CodeEditor.css';\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nimport LivePeers from '../LivePeers/LivePeers';\r\nimport Input from '../Input/Input';\r\nimport LiveChat from '../LiveChat/LiveChat';\r\nimport RoomVerification from '../RoomVerification/RoomVerification';\r\nimport UserVerification from '../UserVerification/UserVerification';\r\nimport FetchRoomUsers from '../FetchRoomUsers/FetchRoomUsers';\r\nimport FetchRoomMessages from '../FetchRoomMessages/FetchRoomMessages';\r\nimport NavBar from '../NavBar/NavBar';\r\n\r\nimport Compiled from '../Compile/Compiled';\r\n//  const ENDPOINT = 'https://peerswebapplication.herokuapp.com/';\r\n const ENDPOINT = 'http://localhost:5000';\r\n\r\n\r\nlet socket;\r\n\r\nvar connectionOptions = {\r\n    \"force new connection\": true,\r\n    \"reconnectionAttempts\": \"Infinity\",\r\n    \"timeout\": 10000,\r\n    \"transports\": [\"websocket\"]\r\n};\r\nconst CodeArea = ({ location }) => {\r\n    const [name, setName] = useState(\"\");  //SET NAME FOR THE ROOM \r\n    const [room, setRoom] = useState(\"\");   //SET ROOM NAME\r\n    const [users, setUsers] = useState('');  \r\n    const [message, setMessage] = useState(''); \r\n    const [messages, setMessages] = useState();\r\n    const [textmessage, setTextMessage] = useState('');\r\n    const [toggle, setButton] = useState(1);\r\n    const [output, setOutput] = useState('');\r\n    const [language, setLanguage] = useState('C'); //INDICATES PRESENT CHOOSING LANGUAGE . BY DEFAULT C LANGUAGE IS CHOOSE.\r\n    const [langtoggle, setLang] = useState(0);  //ENSURE VISIBILITY OF LANGUAGES DROPDOWN BAR.\r\n    const [input, setInput] = useState(\"\");\r\n    const [iscoderunning, setBit] = useState(1);\r\n    const [emit,setEmit] = useState(1);\r\n    \r\n    // const [id,  setId] = useState(localStorage.getItem('login_id'));\r\n\r\n    const [valid, setValid] = useState(4);\r\n\r\n    useEffect( async () => {\r\n    \r\n        let userAccess = await UserVerification(valid, setValid);\r\n        if(userAccess === \"valid\")\r\n        setValid(1);\r\n        else\r\n        window.location.href  =\"/signup\";\r\n\r\n        let roomaccess = await RoomVerification();\r\n        if(roomaccess === \"invalid access\")\r\n        window.location.href = \"/createjoin\"\r\n\r\n        let cookie = new Cookies();\r\n        let username = cookie.get(\"username\");\r\n        let roomname = cookie.get(\"roomname\");\r\n        \r\n        setName(username);\r\n        setRoom(roomname);\r\n       await FetchRoomUsers(roomname,setUsers);\r\n        await FetchRoomMessages(username,message,roomname,setMessages)\r\n        \r\n\r\n    },[])\r\n\r\n\r\n    \r\n \r\n    \r\n\r\n\r\n\r\n    \r\n      \r\n\r\n\r\n \r\n\r\n     \r\n \r\n\r\n\r\n\r\n    useEffect(() => {\r\n    \r\n        socket = io(ENDPOINT, connectionOptions);\r\n     \r\n    }, [ENDPOINT]);\r\n\r\n\r\n    useEffect(() => {\r\n        if(room !== \"\")\r\n        socket.emit('join', {name,room});\r\n\r\n \r\n    }, [room]);\r\n   \r\n    useEffect(() => {\r\n\r\n        socket.on('addtotextarea', textContainer => {\r\n    \r\n            setTextMessage(textContainer.textContainer);\r\n        })\r\n\r\n    },[])\r\n\r\n\r\n    useEffect(async () => {\r\n        socket.on('message', ({message,name,room})=> {\r\n           \r\n             if(room !== null)\r\n             FetchRoomMessages(name,message,room,setMessages);\r\n        });\r\n\r\n        socket.on(\"roomData\", async ({ user,room }) => {\r\n             if(room !== null)\r\n             FetchRoomUsers(room,setUsers);\r\n\r\n        }); \r\n\r\n\r\n       \r\n\r\n\r\n    }, [room]);\r\n \r\n\r\n    async function sendMessage(event) {\r\n        event.preventDefault();\r\n        let Options = {\r\n            method: 'POST',\r\n                    mode:'cors',\r\n                    cache: 'no-cache',\r\n                    \r\n                    headers: {\r\n                                 \"content-type\":\"application/json\",\r\n                           },\r\n                    \r\n                     redirect: 'follow',\r\n                     referrerPolicy:'no-referrer',\r\n                    body: JSON.stringify({\r\n                        \"user\": name,\r\n                        \"usermessage\":message,\r\n                        \"roomname\": room\r\n                      })\r\n          \r\n        }\r\n        \r\n\r\n        \r\n         await  fetch('http://localhost:5000/messages', Options)\r\n       \r\n            socket.emit('sendMessage', {message,name,room}, () => setMessage(''));\r\n      \r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        socket.on(\"textContainerMessage\", (textmessage) => {\r\n\r\n            setTextMessage(textmessage);\r\n            setEmit(0)\r\n        });\r\n        \r\n\r\n\r\n    }, [textmessage]);\r\n\r\n    useEffect(() => {\r\n\r\n            if(emit === 1)\r\n            {\r\n            socket.emit(\"textContainerMessage\", { textmessage, room });\r\n            }\r\n        \r\n\r\n\r\n    }, [textmessage]);\r\n\r\n    const languagues = {\"C\":\"C\",\"CPP\":\"C++\",\"CPP14\":\"C++ 14\", \"JAVA\": \"Java\", \"JAVASCRIPT_NODE\": \"Javascript(Node.js)\", \"PYTHON\": \"Python 2\",\r\n          \"PYTHON3\": \"Python 3\", \"KOTLIN\":\"Kotlin\"}\r\n    \r\n  function toggleLanguageName() {\r\n      if(langtoggle === 1)\r\n      return 0;\r\n      else\r\n      return 1;\r\n  }\r\n  \r\n    return (\r\n\r\n        <div className=\"main-container\">\r\n            \r\n        <NavBar valid = {valid} setValid = {setValid} />\r\n            <div className=\"container\">\r\n\r\n\r\n\r\n                <div className=\"box1\">\r\n                  \r\n                    <div className=\"box1-buttons\">\r\n\r\n                        <button className=\"live-buttons\" onClick={(event) => {FetchRoomUsers(room,setUsers); setButton(1)}}>LivePeers</button>\r\n                        <button className=\"live-buttons\" onClick={(event) => {FetchRoomMessages(name,message,room,setMessages);setButton(2)}}>LiveChat</button>\r\n                        <button className=\"live-buttons\" onClick={(event) => setButton(3)}>I/O Console</button>\r\n\r\n\r\n                    </div>\r\n                    {\r\n                        (toggle === 1)\r\n                            ?\r\n                            <div className=\"box1-sub1\"><div className=\"LivePeers\"><LivePeers users={users} /></div></div>:\r\n                            (toggle === 2)?\r\n                            <div className=\"box1-sub1\">\r\n                                <div className=\"box1-sub1-cont\">\r\n                                    <div id = \"chat\" className=\"chat-container\"><LiveChat messages={messages} name={name} /></div>\r\n                                    <div className=\"InputArea\"><Input  message={message} setMessage={setMessage} sendMessage={sendMessage} /></div>\r\n\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                            :\r\n                            <div className=\"box1-sub1\">\r\n                                \r\n                                    \r\n                                    \r\n                                <div className=\"input\">\r\n                                    \r\n                                \r\n                                    <h3>output:</h3><br></br>\r\n                                \r\n                                    <textarea className=\"inputContainer\" \r\n                                  value = {output}\r\n                                  disabled\r\n                        \r\n                              ></textarea>\r\n                                   \r\n                                    \r\n                                </div>\r\n                            \r\n                               \r\n                                <div className=\"input\">\r\n                                \r\n                                   \r\n                                <textarea className=\"inputContainer\" \r\n                        spellCheck=\"false\"\r\n                        placeholder=\"Enter input\"\r\n                        value={input}\r\n                        onChange={({ target: { value } }) => setInput(value)}\r\n                        \r\n                              ></textarea>\r\n                            \r\n                              \r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                    }\r\n\r\n\r\n\r\n\r\n                </div>\r\n                <div className=\"box2\">\r\n                    <textarea className=\"textContainer\" \r\n                        spellCheck=\"false\"\r\n                        placeholder=\"Type Code\"\r\n                        value={textmessage}\r\n                        onChange={({ target: { value } }) => {setEmit(1);setTextMessage(value)}}\r\n                    >\r\n\r\n                    </textarea>\r\n                    <div className=\"run-code\">\r\n                        {(iscoderunning === 1)?\r\n                        \r\n                        <div className=\"button-run-code\"><button className=\"run\" onClick={async () => {setBit(0);setOutput(\"compiling code\");await Compiled(textmessage,input,language,setOutput,setBit)}}>Run code</button></div>\r\n                         \r\n                         :\r\n                         <div className=\"dummy-run-code\"><button className=\"run1 \" >Run code</button></div>\r\n    \r\n\r\n                         } \r\n                        <div className=\"lang\" >\r\n                        { (langtoggle === 1)? \r\n                            <div className=\"lang-dropdown\" id=\"lang-drop\" >\r\n                                 <div className=\"lang-option\" onClick={ () => { setLanguage('C');setLang(0)}}>C</div>\r\n                                 <div className=\"lang-option\" onClick={ () => { setLanguage('CPP');setLang(0)}}>C++</div>\r\n                                 <div className=\"lang-option\" onClick={ () => { setLanguage('CPP14'); setLang(0)}}>C++14</div>\r\n                                 <div className=\"lang-option\" onClick={ () => { setLanguage('JAVA'); setLang(0)}}>Java</div>\r\n                                 <div className=\"lang-option\" onClick={ () => { setLanguage('JAVASCRIPT_NODE'); setLang(0)}}>Javascript(Node.js)</div>\r\n                                 <div className=\"lang-option\" onClick={ () => {setLanguage('PYTHON'); setLang(0)}}>Python 2</div>\r\n                                 <div className=\"lang-option\" onClick={ () => {setLanguage('PYTHON3'); setLang(0)}}>Python 3</div>\r\n                                 \r\n                                 <div className=\"lang-option\" onClick={ () => { setLanguage('KOTLIN');setLang(0)}}>Kotlin</div>\r\n\r\n                             </div>\r\n                             :\r\n                             <div></div>\r\n                              }\r\n                        <div className=\"lang-content\"><div className=\"lang-name\"><div>{languagues[language]}</div><div className=\"lang-button\" ><button onClick={() => { setLang(toggleLanguageName())} }>&#9650;</button></div></div></div>\r\n                              \r\n                             \r\n                            </div>\r\n                    </div>\r\n                   \r\n                    \r\n                </div> \r\n            </div>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default CodeArea;","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\codeEditor\\codeEditor.js",["109","110","111","112","113","114"],"C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\CodeEditor\\CodeEditor.js",["115","116","117"],"import React, {  useState, useEffect } from 'react';\r\n\r\nimport image from '../../icons/loading2.gif';\r\nimport './CodeEditor.css';\r\nimport NavBar from '../NavBar/NavBar'\r\nimport UserVerification from '../UserVerification/UserVerification';\r\n\r\n\r\nimport Compiled from '../Compile/Compiled';\r\n\r\n\r\nconst CodeEditor = () => {\r\n    \r\n    \r\n\r\n\r\n    const [textmessage, setTextMessage] = useState('');\r\n   \r\n    const [output, setOutput] = useState('');\r\n    const [language, setLanguage] = useState('C');\r\n    const [langtoggle, setLang] = useState(0); \r\n    const [input, setInput] = useState(\"\");\r\n    const [iscoderunning, setBit] = useState(1);\r\n\r\n    const [valid, setValid] = useState(4);\r\n\r\nuseEffect(async () => {\r\n\r\n    let userAccess = await UserVerification(valid, setValid);\r\n    if(userAccess === \"valid\")\r\n    setValid(1);\r\n    else\r\n    setValid(0);\r\n},[])\r\n\r\n\r\n\r\n     \r\nconst languagues = {\"C\":\"C\",\"CPP\":\"C++\",\"CPP14\":\"C++ 14\", \"JAVA\": \"Java\", \"JAVASCRIPT_NODE\": \"Javascript(Node.js)\", \"PYTHON\": \"Python 2\",\r\n          \"PYTHON3\": \"Python 3\", \"KOTLIN\":\"Kotlin\"}\r\n    \r\n  function toggleLanguageName() {\r\n      if(langtoggle === 1)\r\n      return 0;\r\n      else\r\n      return 1;\r\n  }\r\n  \r\n    return (\r\n\r\n        <div className=\"main-container\">\r\n      \r\n      <NavBar valid = {valid} setValid = {setValid} />\r\n            <div className=\"container\">\r\n\r\n            \r\n            \r\n\r\n                <div className=\"box1\">\r\n                   \r\n\r\n                    <div className=\"box1-buttons\">\r\n                        \r\n                           \r\n                            <button className=\"live-buttons\" >I/O Console</button>\r\n                           \r\n                        \r\n                        \r\n\r\n\r\n                    </div>\r\n                     \r\n    \r\n\r\n                                <div className=\"box1-sub1\">\r\n                                \r\n                                    \r\n                                    \r\n                                <div className=\"output\">\r\n                                    \r\n                                <div className=\"output1\">\r\n                                    <h3>output:</h3><br></br>\r\n                                    <div style={{whiteSpace:\"pre\"}}>\r\n                                        {(output === \"compiling code\")?\r\n                                        <div className=\"output1-sub\">\r\n                                         {output}<img src={image} ></img>\r\n                                    </div >\r\n                                    :\r\n                                    <div className=\"output1-sub\">\r\n                                        {output}\r\n                                        </div>\r\n\r\n                                           }\r\n                                       \r\n                                    </div>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            \r\n                               \r\n                                <div className=\"input\">\r\n                                \r\n                                    <div className=\"input1\">\r\n                                <textarea className=\"inputContainer\" \r\n                        spellCheck=\"false\"\r\n                        placeholder=\"Enter input\"\r\n                        value={input}\r\n                        onChange={({ target: { value } }) => setInput(value)}\r\n                        \r\n                              ></textarea>\r\n                              </div>\r\n                              \r\n                                </div>\r\n                            </div>\r\n\r\n                            \r\n\r\n\r\n                    \r\n\r\n\r\n\r\n\r\n                </div>\r\n                <div className=\"box2\">\r\n\r\n                    <textarea className=\"textContainer\" \r\n                        spellCheck=\"false\"\r\n                        placeholder=\"Type Code\"\r\n                        value={textmessage}\r\n                        onChange={({ target: { value } }) => setTextMessage(value)}\r\n                       \r\n                    >\r\n\r\n                    </textarea>\r\n\r\n                   \r\n\r\n                    <div className=\"run-code\">\r\n                        {(iscoderunning === 1)?\r\n                        \r\n                        <div className=\"button-run-code\"><button className=\"run\"  onClick={async () => {setBit(0);setOutput(\"compiling code\");await Compiled(textmessage,input,language,setOutput,setBit)}}>Run code</button></div>\r\n                         \r\n                         :\r\n                         <div className=\"dummy-run-code\"><button className=\"run1 \" >Run code</button></div>\r\n    \r\n\r\n                         } \r\n                        <div className=\"lang\" >\r\n                        { (langtoggle === 1)? \r\n                            <div className=\"lang-dropdown\" id=\"lang-drop\" >\r\n                                 <div className=\"lang-option\" onClick={ () => { setLanguage('C');setLang(0)}}>C</div>\r\n                                 <div className=\"lang-option\" onClick={ () => { setLanguage('CPP');setLang(0)}}>C++</div>\r\n                                 <div className=\"lang-option\" onClick={ () => { setLanguage('CPP14'); setLang(0)}}>C++14</div>\r\n                                 <div className=\"lang-option\" onClick={ () => { setLanguage('JAVA'); setLang(0)}}>Java</div>\r\n                                 <div className=\"lang-option\" onClick={ () => { setLanguage('JAVASCRIPT_NODE'); setLang(0)}}>Javascript(Node.js)</div>\r\n                                 <div className=\"lang-option\" onClick={ () => {setLanguage('PYTHON'); setLang(0)}}>Python 2</div>\r\n                                 <div className=\"lang-option\" onClick={ () => {setLanguage('PYTHON3'); setLang(0)}}>Python 3</div>\r\n                                 \r\n                                 <div className=\"lang-option\" onClick={ () => { setLanguage('KOTLIN');setLang(0)}}>Kotlin</div>\r\n\r\n                             </div>\r\n                             :\r\n                             <div></div>\r\n                              }\r\n                        <div className=\"lang-content\"><div className=\"lang-name\"><div>{languagues[language]}</div><div className=\"lang-button\" ><button onClick={() => { setLang(toggleLanguageName())} }>&#9650;</button></div></div></div>\r\n                              \r\n                             \r\n                            </div>\r\n                    </div>\r\n                   \r\n                    \r\n                </div> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CodeEditor;","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\UsersGuide\\UsersGuide.js",[],"C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\Login\\login.js",["118","119","120","121","122","123","124","125","126","127","128","129","130"],"C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\Login\\Login.js",["131"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport  { GoogleLogin } from 'react-google-login';\r\nimport Cookies from 'universal-cookie';\r\nimport './Login.css';\r\nimport NavBar from '../NavBar/NavBar';\r\n\r\nimport UserVerification from '../UserVerification/UserVerification';\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\nconst Login = ({usertype}) => {\r\n\r\n    \r\n\r\n    const [error, setError] = useState(\"\");\r\n    const [valid, setValid] = useState(3);\r\n\r\n    useEffect(async () => {\r\n\r\n      let access = await UserVerification();\r\n      if(access === \"valid\")\r\n      window.location.href = \"/\";\r\n      else\r\n      setValid(3)\r\n\r\n    \r\n  },[])\r\n  \r\n  \r\n\r\n\r\n    async function submit() {\r\n        let arr = document.getElementsByClassName(\"login-form-details\");\r\n  \r\n\r\n\r\n        let Options = {\r\n            method: 'POST',\r\n                    mode:'cors',\r\n                    cache: 'no-cache',\r\n                    \r\n                    headers: {\r\n                                 \"content-type\":\"application/json\",\r\n                           },\r\n                    \r\n                     redirect: 'follow',\r\n                     referrerPolicy:'no-referrer',\r\n                    body: JSON.stringify({\r\n                       \"type\":\"1\",\r\n                       \"usertype\": usertype,\r\n                       \"gmail\":arr[0].value,\r\n                       \"password\":arr[1].value \r\n                      \r\n                       \r\n        \r\n                      })\r\n           \r\n        }\r\n        \r\n        const response = await fetch(`http://localhost:5000/login`,Options)\r\n        \r\n        const data = await response.json();\r\n\r\n  let res = data.data;\r\n  if(res === \"user not registered\")\r\n  {\r\n    setError(res);\r\n  }\r\n  else if(res === \"wrong password\")\r\n  {\r\n    setError(res)\r\n  }\r\n  else if(res === \"error\")\r\n  {\r\n    setError(\"Some error ocurred\");\r\n  }\r\n  else \r\n  {\r\n    const cookies = new Cookies();\r\n    cookies.set(\"id\",data.data);\r\n    window.location.href=\"/\"\r\n  \r\n  }\r\n\r\n\r\n\r\n    }\r\n\r\n    const onSuccess = async (res) => {\r\n      let check = res;\r\n      \r\n    let Options = {\r\n      method: 'POST',\r\n              mode:'cors',\r\n              cache: 'no-cache',\r\n              \r\n              headers: {\r\n                           \"content-type\":\"application/json\",\r\n                     },\r\n              \r\n               redirect: 'follow',\r\n               referrerPolicy:'no-referrer',\r\n              body: JSON.stringify({\r\n                \r\n                 \"id\":check.googleId,\r\n                  \"firstName\":check.Ws.zU,\r\n                 \"lastName\":check.Ws.zS,\r\n                 \"gmail\":check.Ws.Ht\r\n                 \r\n  \r\n                })\r\n    \r\n  }\r\n  \r\n  const response = await fetch(`http://localhost:5000/login`,Options)\r\n  \r\n  const data = await response.json();\r\n  const cookies = new Cookies();\r\n  cookies.set(\"id\",data.data);\r\n  window.location.href=\"/\"\r\n    }\r\n\r\n    \r\n    const onFailure = (res) => {\r\n      setError(\"Something went wrong, try again\")\r\n    }\r\n  \r\n  return (\r\n      <div className=\"signup-container\">\r\n        <NavBar valid = {valid} setValid = {setValid} />  \r\n      \r\n\r\n        \r\n        <div className=\"signup-form\">\r\n            <div className=\"signup\">\r\n        <h2 className=\"signup-heading\">Login</h2>\r\n  {\r\n         (error !== \"\")\r\n         ?\r\n         <div className=\"error\">{error}</div>\r\n         :\r\n         <div className=\"errorr\"></div>\r\n\r\n       }\r\n      \r\n  <p>Please fill in this form to create an account.</p>\r\n  <hr></hr>\r\n  \r\n  <label for=\"email\"><b>Email</b></label>\r\n  <input className=\"login-form-details\" type=\"text\" placeholder=\"Enter Email\" name=\"email\" required></input>\r\n  <br></br>\r\n\r\n  <label for=\"password\"><b>Password</b></label>\r\n  <input className=\"login-form-details\" type=\"password\" placeholder=\"Enter password\" name=\"password\" required></input>\r\n  <br></br>\r\n      \r\n\r\n      <button className = \"signup-submit login\" onClick = {() => {submit()}}>Submit</button>\r\n     \r\n      <span className=\"or\">or</span>\r\n      \r\n      <GoogleLogin  \r\n        className=\"signup-submit2 \"\r\n        clientId=\"1047619577038-454j1g6t3kntq9d0ljc8rmt16359mvck.apps.googleusercontent.com\"\r\n        render = {(renderProps) => (\r\n          <button className=\"signup-submit2 login\" onClick={renderProps.onClick} disabled={renderProps.disabled}>Sign in with Google</button>\r\n        )}\r\n        onSuccess = {onSuccess}\r\n        onFailure = {onFailure}\r\n        icon = {false}\r\n        cookiePolicy = {'single_host_origin'}\r\n        isSignedIn={false}\r\n        />\r\n\r\n        </div>\r\n     \r\n\r\n        \r\n\r\n\r\n\r\n</div>\r\n      </div>\r\n\r\n\r\n     \r\n\r\n  )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\CreateJoin\\CreateJoin.js",["132","133"],"import React, { useEffect, useState } from 'react';\r\nimport '../Signup/Signup.css';\r\nimport '../CreateJoin/CreateJoin.css'\r\n\r\nimport UserVerification from '../UserVerification/UserVerification';\r\n\r\nimport Create from './Create';\r\nimport Join from './Join';\r\nimport NavBar from '../NavBar/NavBar';\r\n\r\n\r\n\r\nconst CreateJoin = () => {\r\n  \r\n    const [type, setType] = useState(\"\");\r\n    const [valid, setValid] = useState(4);\r\n\r\n    useEffect(async () => {\r\n    \r\n        let userAccess = await UserVerification(valid, setValid);\r\n        if(userAccess === \"valid\")\r\n        setValid(1);\r\n        else\r\n        window.location.href=\"/signup\";\r\n    },[])\r\n\r\n\r\n    \r\n\r\n    return (\r\n\r\n       <div className=\"signup-container\">\r\n           <NavBar valid = {valid} setValid = {setValid} />\r\n         \r\n        <div className=\"signup-form\">\r\n      \r\n       {\r\n           (type === \"\")\r\n           ?\r\n           <div className=\"join-create\">\r\n           <div className=\"joincreate\" onClick = {() => {setType(\"create\")}}>Create</div>\r\n           <div className=\"joincreate\"  onClick = {() => {setType(\"join\")}}>Join</div>\r\n       \r\n           </div>\r\n           :\r\n           \r\n\r\n               (type === \"create\")\r\n               ?\r\n               <Create/>\r\n               :\r\n               <Join/>\r\n           \r\n       }\r\n\r\n      \r\n    \r\n  \r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default CreateJoin;  ","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\Signup\\Signup.js",["134"],"\r\nimport React, { useState,useEffect } from 'react';\r\nimport {GoogleLogin} from 'react-google-login';\r\nimport Cookies from 'universal-cookie';\r\nimport './Signup.css';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport UserVerification from '../UserVerification/UserVerification';\r\n\r\n\r\nconst Signup= () => {\r\n\r\n \r\n  const [error,setError] = useState(\"\");\r\n\r\n  const [valid, setValid] = useState(2);\r\n\r\n  useEffect(async () => {\r\n\r\n    let access = await UserVerification();\r\n    if(access === \"valid\")\r\n    window.location.href = \"/\"; \r\n    else\r\n    setValid(2)\r\n  \r\n\r\n  \r\n},[])\r\n\r\n\r\n  \r\n  \r\nasync function Submit() {\r\n\r\n  let formDetails = document.getElementsByClassName(\"form-details\");\r\n  let first_name = formDetails[0].value\r\n  let last_name = formDetails[1].value\r\n  let gmail = formDetails[2].value\r\n  let password = formDetails[3].value\r\n  let repeatPassword = formDetails[4].value\r\n\r\n\r\n  let Options = {\r\n    method: 'POST',\r\n            mode:'cors',\r\n            cache: 'no-cache',\r\n            \r\n            headers: {\r\n                         \"content-type\":\"application/json\",\r\n                   },\r\n            \r\n             redirect: 'follow',\r\n             referrerPolicy:'no-referrer',\r\n            body: JSON.stringify({\r\n               \"type\":\"1\",\r\n               \"userId\":Date.now().toString(),\r\n               \"first_name\": first_name,\r\n               \"last_name\":  last_name,\r\n               \"gmail\": gmail,\r\n               \"password\": password\r\n\r\n              })\r\n  \r\n}\r\n\r\nif(first_name === \"\")\r\n{\r\n     setError(\"First name field is empty!!!\")\r\n} \r\nelse if(last_name === \"\")\r\n{\r\n  setError(\"Last name field is empty!!!\")\r\n} \r\nelse if(gmail === \"\")\r\n{\r\n  setError(\"gmail field is empty!!!\")\r\n} \r\nelse if(password === \"\")\r\n{\r\n  setError(\"password field is empty!!!\")\r\n} \r\nelse if( password !== repeatPassword)\r\n{\r\n  setError(\"password doesn't match!!!\")\r\n} \r\nelse\r\n{\r\n\r\nconst response = await fetch(`http://localhost:5000/signup`,Options)\r\n\r\nconst data = await response.json();\r\n\r\n if(data.data === \"already registered\")\r\n {\r\n   setError(data.data+\"!!!\");\r\n }\r\n else{\r\n  const cookies = new Cookies();\r\n  cookies.set(\"id\",data.data);\r\n  window.location.href = \"/\";\r\n  \r\n }\r\n}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n  \r\n  const onSuccess = async (res) => {\r\n\r\n    let check = res;\r\n\r\n  let Options = {\r\n    method: 'POST',\r\n            mode:'cors',\r\n            cache: 'no-cache',\r\n            \r\n            headers: {\r\n                         \"content-type\":\"application/json\",\r\n                   },\r\n            \r\n             redirect: 'follow',\r\n             referrerPolicy:'no-referrer',\r\n            body: JSON.stringify({\r\n               \"type\":\"2\",\r\n               \"id\":check.googleId,\r\n                \"firstName\":check.Ws.zS,\r\n               \"lastName\":check.Ws.zU,\r\n               \"gmail\":check.Ws.Ht\r\n               \r\n\r\n              })\r\n  \r\n}\r\n\r\nconst response = await fetch(`http://localhost:5000/signup`,Options)\r\n\r\nconst data = await response.json();\r\nconst cookies = new Cookies();\r\ncookies.set(\"id\",data.data);\r\nwindow.location.href = \"/\";\r\n  }\r\n\r\n  const onFailure = (res) => {\r\n    setError(\"Something went wrong, try again\")\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n        <NavBar valid = {valid} setValid = {setValid} />\r\n      \r\n     \r\n      \r\n       \r\n       <div className=\"signup-form\">\r\n           <div className=\"signup\">\r\n  <h2 className=\"signup-heading\">Signup</h2>\r\n  {\r\n         (error !== \"\")\r\n         ?\r\n         <div className=\"error\">{error}</div>\r\n         :\r\n         <div className=\"errorr\"></div>\r\n\r\n       }\r\n      \r\n\r\n\r\n  <p>Please fill in this form to create an account.</p>\r\n  <hr></hr>\r\n  \r\n  <label for=\"firstname\"><b>First Name</b></label>\r\n  <input className=\"form-details\" type=\"text\" placeholder=\"Enter Email\" name=\"firstname\" required></input>\r\n  <br></br>\r\n\r\n  <label for=\"lastname\"><b>Last Name</b></label>\r\n  <input className=\"form-details\" type=\"text\" placeholder=\"Enter Email\" name=\"lastname\" required></input>\r\n  <br></br>\r\n    \r\n  \r\n\r\n  \r\n  <label for=\"gmail\"><b>Gmail</b></label>\r\n  <input className=\"form-details\" type=\"text\" placeholder=\"Enter Email\" name=\"gmail\" required></input>\r\n  <br></br>\r\n   \r\n  <label for=\"psw\"><b>Password</b></label>\r\n  <input className=\"form-details\" type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required></input>\r\n  <br></br>\r\n  <label for=\"psw-repeat\"><b>Repeat Password</b></label>\r\n  <input className=\"form-details\" type=\"password\" placeholder=\"Repeat Password\" name=\"psw-repeat\" required ></input>\r\n  <br></br>\r\n\r\n  <br></br>\r\n  <button className = \"signup-submit\" onClick = {()=> {Submit()}}>Submit</button>\r\n  <span className=\"or\">or</span>\r\n\r\n  <GoogleLogin  \r\n        className=\"signup-submit2\"\r\n        clientId=\"1047619577038-454j1g6t3kntq9d0ljc8rmt16359mvck.apps.googleusercontent.com\"\r\n        render = {(renderProps) => (\r\n          <button className=\"signup-submit2 login\" onClick={renderProps.onClick} disabled={renderProps.disabled}>Sign in with Google</button>\r\n        )}\r\n        onSuccess = {onSuccess}\r\n        onFailure = {onFailure}\r\n        icon = {false}\r\n        cookiePolicy = {'single_host_origin'}\r\n        isSignedIn={true}\r\n        />\r\n       \r\n  </div>\r\n  \r\n\r\n        \r\n  </div>\r\n        \r\n        \r\n    </div>\r\n\r\n\r\n   \r\n\r\n)\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Signup;\r\n\r\n\r\n\r\n","C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\NavBar\\NavBar.js",[],"C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\CreateJoin\\Create.js",[],"C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\CreateJoin\\Join.js",[],"C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\Compile\\Compiled.js",[],"C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\UserVerification\\UserVerification.js",[],"C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\RoomVerification\\RoomVerification.js",[],"C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\FetchRoomUsers\\FetchRoomUsers.js",[],"C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\FetchRoomMessages\\FetchRoomMessages.js",[],"C:\\Full-Stack-Development-Tutorial\\Hackathon\\peer-programming-app\\client\\src\\components\\Home\\Home.js",["135"],"\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport './Home.css';\r\nimport image1 from '../../icons/compile2.jpg';\r\nimport image2 from '../../icons/peers3.png';\r\nimport {Link} from 'react-router-dom';\r\nimport NavBar from '../NavBar/NavBar';\r\n\r\nimport UserVerification from '../UserVerification/UserVerification';\r\n\r\nconst Home = () => {\r\n\r\nconst [valid, setValid] = useState(4);\r\n\r\nuseEffect(async () => {\r\n\r\n    let userAccess = await UserVerification();\r\n    if(userAccess === \"valid\")\r\n    setValid(1); \r\n    else\r\n    setValid(0);\r\n},[])\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"main\">\r\n        <NavBar valid = {valid} setValid = {setValid} />\r\n     \r\n        <div className=\"main-container-first\">\r\n            <div className=\"main-container-first-sub\">\r\n                <div className=\"main-container-first-sub1\">\r\n                 <img className=\"main-img\" src={image1} alt=\"compile\"></img>\r\n                    <h2>Execute code in multiple Programming Languages.</h2>\r\n\r\n                </div>\r\n                <div className=\"main-container-first-sub2\">\r\n                    <Link className=\"main-button\" to=\"/coding\">\r\n                     <h3>Start Coding</h3>\r\n                        \r\n                    </Link>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n        <div className=\"main-container-second\">\r\n            <div className=\"main-container-first-sub\">\r\n                <div className=\"main-container-first-sub1\">\r\n                <img className=\"main-img2\" src={image2} alt=\"peers\"></img>\r\n                <h3>Code with your peers in realtime environment.</h3>\r\n                <h3>And Communicate with them through built in chat application. </h3>\r\n\r\n                </div>\r\n                <div className=\"main-container-first-sub2\">\r\n                    <Link className=\"main-button main-button2\" to = \"/createjoin\">\r\n                        <h3>Peers Programming</h3>\r\n                        \r\n                    </Link >\r\n                  \r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n    \r\n\r\n\r\n   \r\n\r\n  )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n",{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":50,"column":16,"nodeType":"142","endLine":72,"endColumn":6},{"ruleId":"140","severity":1,"message":"143","line":72,"column":7,"nodeType":"144","endLine":72,"endColumn":9,"suggestions":"145"},{"ruleId":"140","severity":1,"message":"146","line":96,"column":8,"nodeType":"144","endLine":96,"endColumn":18,"suggestions":"147"},{"ruleId":"140","severity":1,"message":"148","line":104,"column":8,"nodeType":"144","endLine":104,"endColumn":14,"suggestions":"149"},{"ruleId":"140","severity":1,"message":"141","line":116,"column":15,"nodeType":"142","endLine":133,"endColumn":6},{"ruleId":"140","severity":1,"message":"150","line":186,"column":8,"nodeType":"144","endLine":186,"endColumn":21,"suggestions":"151"},{"ruleId":"152","severity":1,"message":"153","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"156","line":11,"column":8,"nodeType":"154","messageId":"155","endLine":11,"endColumn":19},{"ruleId":"152","severity":1,"message":"157","line":27,"column":7,"nodeType":"154","messageId":"155","endLine":27,"endColumn":17},{"ruleId":"152","severity":1,"message":"158","line":34,"column":12,"nodeType":"154","messageId":"155","endLine":34,"endColumn":18},{"ruleId":"159","severity":2,"message":"160","line":105,"column":25,"nodeType":"154","messageId":"161","endLine":105,"endColumn":36},{"ruleId":"159","severity":2,"message":"162","line":369,"column":16,"nodeType":"154","messageId":"161","endLine":369,"endColumn":26},{"ruleId":"140","severity":1,"message":"141","line":27,"column":11,"nodeType":"142","endLine":34,"endColumn":2},{"ruleId":"140","severity":1,"message":"163","line":34,"column":3,"nodeType":"144","endLine":34,"endColumn":5,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":86,"column":50,"nodeType":"167","endLine":86,"endColumn":68},{"ruleId":"152","severity":1,"message":"168","line":1,"column":18,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"169","line":6,"column":7,"nodeType":"154","messageId":"155","endLine":6,"endColumn":12},{"ruleId":"159","severity":2,"message":"170","line":14,"column":22,"nodeType":"154","messageId":"161","endLine":14,"endColumn":26},{"ruleId":"159","severity":2,"message":"171","line":16,"column":47,"nodeType":"154","messageId":"161","endLine":16,"endColumn":63},{"ruleId":"159","severity":2,"message":"172","line":16,"column":64,"nodeType":"154","messageId":"161","endLine":16,"endColumn":66},{"ruleId":"159","severity":2,"message":"173","line":21,"column":117,"nodeType":"154","messageId":"161","endLine":21,"endColumn":124},{"ruleId":"159","severity":2,"message":"174","line":23,"column":117,"nodeType":"154","messageId":"161","endLine":23,"endColumn":124},{"ruleId":"159","severity":2,"message":"175","line":25,"column":117,"nodeType":"154","messageId":"161","endLine":25,"endColumn":128},{"ruleId":"176","severity":2,"message":"177","line":26,"column":18,"nodeType":"178","endLine":26,"endColumn":22},{"ruleId":"159","severity":2,"message":"179","line":26,"column":41,"nodeType":"154","messageId":"161","endLine":26,"endColumn":45},{"ruleId":"180","severity":2,"message":"181","line":26,"column":103,"nodeType":"154","messageId":"182","endLine":26,"endColumn":107},{"ruleId":"159","severity":2,"message":"183","line":26,"column":116,"nodeType":"154","messageId":"161","endLine":26,"endColumn":120},{"ruleId":"159","severity":2,"message":"184","line":26,"column":134,"nodeType":"154","messageId":"161","endLine":26,"endColumn":142},{"ruleId":"140","severity":1,"message":"141","line":23,"column":15,"nodeType":"142","endLine":32,"endColumn":4},{"ruleId":"140","severity":1,"message":"141","line":18,"column":15,"nodeType":"142","endLine":25,"endColumn":6},{"ruleId":"140","severity":1,"message":"163","line":25,"column":7,"nodeType":"144","endLine":25,"endColumn":9,"suggestions":"185"},{"ruleId":"140","severity":1,"message":"141","line":17,"column":13,"nodeType":"142","endLine":27,"endColumn":2},{"ruleId":"140","severity":1,"message":"141","line":16,"column":11,"nodeType":"142","endLine":23,"endColumn":2},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'message' and 'valid'. Either include them or remove the dependency array.","ArrayExpression",["188"],"React Hook useEffect has an unnecessary dependency: 'ENDPOINT'. Either exclude it or remove the dependency array. Outer scope values like 'ENDPOINT' aren't valid dependencies because mutating them doesn't re-render the component.",["189"],"React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["190"],"React Hook useEffect has missing dependencies: 'emit' and 'room'. Either include them or remove the dependency array.",["191"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'CompileCode' is defined but never used.","'CodeEditor' is assigned a value but never used.","'toggle' is assigned a value but never used.","no-undef","'textmessage' is not defined.","undef","'codeEditor' is not defined.","React Hook useEffect has a missing dependency: 'valid'. Either include it or remove the dependency array.",["192"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Login' is assigned a value but never used.","'type' is not defined.","'MakeErrorVisible' is not defined.","'er' is not defined.","'setName' is not defined.","'setRoom' is not defined.","'setPassword' is not defined.","react/jsx-no-undef","'Link' is not defined.","JSXIdentifier","'func' is not defined.","no-restricted-globals","Unexpected use of 'name'.","defaultMessage","'room' is not defined.","'passcode' is not defined.",["193"],"no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"202","fix":"204"},"Update the dependencies array to be: [message, valid]",{"range":"205","text":"206"},"Update the dependencies array to be: []",{"range":"207","text":"208"},"Update the dependencies array to be: [name, room]",{"range":"209","text":"210"},"Update the dependencies array to be: [emit, room, textmessage]",{"range":"211","text":"212"},"Update the dependencies array to be: [valid]",{"range":"213","text":"214"},{"range":"215","text":"214"},[2619,2621],"[message, valid]",[2782,2792],"[]",[2903,2909],"[name, room]",[4775,4788],"[emit, room, textmessage]",[860,862],"[valid]",[646,648]]